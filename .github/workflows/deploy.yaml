name: Deploy Workout App to Amazon ECR and Lightsail

on:
  push:
    branches:
      - master

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: operation-stacked-workout
  MAJOR_VERSION: 0 # Fixed Major Version

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout workout-app code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Generate version number
        run: echo "APP_VERSION=${{ env.MAJOR_VERSION }}.$GITHUB_RUN_NUMBER" >> $GITHUB_ENV

      - name: Store version in S3
        run: |
          aws s3 cp - s3://${{ secrets.OPERATION_STACKED_WORKOUT_VERSION_BUCKET }}/${{ env.APP_VERSION }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/operation-stacked-workout:${{ env.APP_VERSION }}
          build-args: VERSION=${{ env.APP_VERSION }}

      - name: SSH into EC2 and deploy new container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            # Check if the container exists before attempting to stop and remove it
            if sudo docker ps -a | grep -q operation-stacked-workout; then
              # Stop the existing container (ignores errors if it's not running)
              sudo docker stop operation-stacked-workout || true
              
              # Remove the existing container (ignores errors if it doesn't exist)
              sudo docker rm operation-stacked-workout || true
            fi

            # Log in to ECR
            aws ecr get-login-password --region eu-west-2 | sudo docker login --username AWS --password-stdin ${{ secrets.ECR_URL }}

            # Pull the latest image from ECR
            sudo docker pull ${{ secrets.ECR_URL }}/operation-stacked-workout:${{ env.APP_VERSION }}

            # Start the new containers
            sudo docker run -d -p 5002:8080 \
              -e OperationStackedConnectionString=${{secrets.OPERATIONSTACKEDCONNECTIONSTRING}} \
              -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
              -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
              -e AWS_DEFAULT_REGION=${{ secrets.AWS_REGION }} \
              --name operation-stacked-workout \
              ${{ secrets.ECR_URL }}/operation-stacked-workout:${{ env.APP_VERSION }}


      - name: Validate deployment
        run: |
          for i in {1..60}; do
            echo "Checking if the deployed version is ${APP_VERSION} (Attempt $i)"
            DEPLOYED_VERSION=$(curl --silent https://app.operationstacked.com/workout/version)
            if [ "$DEPLOYED_VERSION" = "${{ env.APP_VERSION }}" ]; then
              echo "Deployment validation succeeded"
              exit 0
            fi
            sleep 3
          done
          echo "Deployment validation failed"
          exit 1
